"""Связывание жанров и авторов с таблицей книг

Revision ID: 5760a85a61e2
Revises: 26a8f73f2115
Create Date: 2025-10-11 07:45:24.043524

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5760a85a61e2'
down_revision: Union[str, Sequence[str], None] = '26a8f73f2115'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genre_table',
    sa.Column('GenreId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('GenreName', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('GenreId'),
    sa.UniqueConstraint('GenreName')
    )
    op.create_table('books_Table',
    sa.Column('BookId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('BookName', sa.String(), nullable=True),
    sa.Column('YearCreate', sa.Date(), nullable=True),
    sa.Column('GenreId', sa.Integer(), nullable=True),
    sa.Column('SaledBooks', sa.Integer(), nullable=True),
    sa.Column('ImageBooks', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['GenreId'], ['genre_table.GenreId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('BookId')
    )
    op.drop_table('GenreTable')
    op.drop_table('BooksTable')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('BooksTable',
    sa.Column('BookId', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('BookName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('YearCreate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('GenreId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('SaledBooks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ImageBooks', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('BookId', name=op.f('BooksTable_pkey'))
    )
    op.create_table('GenreTable',
    sa.Column('GenreId', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('GenreName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('GenreId', name=op.f('GenreTable_pkey')),
    sa.UniqueConstraint('GenreName', name=op.f('GenreTable_GenreName_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('books_Table')
    op.drop_table('genre_table')
    # ### end Alembic commands ###
