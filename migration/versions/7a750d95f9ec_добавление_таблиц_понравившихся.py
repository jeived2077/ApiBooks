"""Добавление таблиц понравившихся

Revision ID: 7a750d95f9ec
Revises: eae9f9dfa17b
Create Date: 2025-10-12 14:50:38.246614

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7a750d95f9ec'
down_revision: Union[str, Sequence[str], None] = 'eae9f9dfa17b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author_table',
    sa.Column('id_author', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('family', sa.String(), nullable=False),
    sa.Column('photo', sa.LargeBinary(), nullable=False),
    sa.Column('information', sa.String(), nullable=False),
    sa.Column('date_author', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id_author')
    )
    op.create_table('genre_table',
    sa.Column('genre_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('genre_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('genre_id'),
    sa.UniqueConstraint('genre_name')
    )
    op.create_table('user_table',
    sa.Column('id_user', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('login_user', sa.String(), nullable=True),
    sa.Column('password_hashed', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('role', sa.String(), server_default='user', nullable=True),
    sa.PrimaryKeyConstraint('id_user'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('login_user'),
    sa.UniqueConstraint('password_hashed')
    )
    op.create_table('books_Table',
    sa.Column('book_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('book_name', sa.String(), nullable=False),
    sa.Column('year_Create', sa.Date(), nullable=False),
    sa.Column('genre_Id', sa.Integer(), nullable=False),
    sa.Column('saled_books', sa.Integer(), nullable=False),
    sa.Column('image_books', sa.LargeBinary(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['genre_Id'], ['genre_table.genre_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('book_id')
    )
    op.create_table('favorite_user_author_table',
    sa.Column('id_favorite', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_author', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('datetime_favorite', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['id_author'], ['author_table.id_author'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_user'], ['user_table.id_user'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_favorite')
    )
    op.create_table('book_author',
    sa.Column('id_bool_author', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_book', sa.Integer(), nullable=True),
    sa.Column('id_author', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_author'], ['author_table.id_author'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_book'], ['books_Table.book_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_bool_author')
    )
    op.create_table('favorite_user_book',
    sa.Column('favorite_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Id_user', sa.Integer(), nullable=False),
    sa.Column('Id_book', sa.Integer(), nullable=False),
    sa.Column('datetime_favorite', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['Id_book'], ['books_Table.book_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['Id_user'], ['user_table.id_user'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('favorite_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('favorite_user_book')
    op.drop_table('book_author')
    op.drop_table('favorite_user_author_table')
    op.drop_table('books_Table')
    op.drop_table('user_table')
    op.drop_table('genre_table')
    op.drop_table('author_table')
    # ### end Alembic commands ###
